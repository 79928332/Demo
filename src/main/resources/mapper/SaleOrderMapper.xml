<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxzy.mapper.SaleOrderMapper">
  <resultMap id="BaseResultMap" type="com.hxzy.entity.SaleOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsId" />
    <result column="customerId" jdbcType="INTEGER" property="customerId" />
    <result column="customerName" jdbcType="VARCHAR" property="customerName" />
    <result column="repoId" jdbcType="INTEGER" property="repoId" />
    <result column="orderNumber" jdbcType="VARCHAR" property="orderNumber" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="unitPrice" jdbcType="DECIMAL" property="unitPrice" />
    <result column="totalPrice" jdbcType="DECIMAL" property="totalPrice" />
    <result column="employeeId" jdbcType="INTEGER" property="employeeId" />
    <result column="descs" jdbcType="VARCHAR" property="descs" />
    <result column="checkState" jdbcType="INTEGER" property="checkState" />
    <result column="checkResult" jdbcType="VARCHAR" property="checkResult" />
    <result column="checkAccount" jdbcType="VARCHAR" property="checkAccount" />
    <result column="checktime" jdbcType="TIMESTAMP" property="checktime" />
    <result column="taketime" jdbcType="TIMESTAMP" property="taketime" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="creatime" jdbcType="TIMESTAMP" property="creatime" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="updatime" jdbcType="TIMESTAMP" property="updatime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goodsId, customerId, customerName, repoId, orderNumber, `count`, unitPrice, totalPrice, 
    employeeId, descs, checkState, checkResult, checkAccount, checktime, taketime, creater, 
    creatime, updater, updatime, `state`, `type`
  </sql>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lz_sale_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from lz_sale_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hxzy.entity.SaleOrder">
    insert into lz_sale_order (id, goodsId, customerId, 
      customerName, repoId, orderNumber, 
      `count`, unitPrice, totalPrice, 
      employeeId, descs, checkState, 
      checkResult, checkAccount, checktime, 
      taketime, creater, creatime, 
      updater, updatime, `state`, 
      `type`)
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{customerName,jdbcType=VARCHAR}, #{repoId,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, 
      #{employeeId,jdbcType=INTEGER}, #{descs,jdbcType=VARCHAR}, #{checkState,jdbcType=INTEGER}, 
      #{checkResult,jdbcType=VARCHAR}, #{checkAccount,jdbcType=VARCHAR}, #{checktime,jdbcType=TIMESTAMP}, 
      #{taketime,jdbcType=TIMESTAMP}, #{creater,jdbcType=VARCHAR}, #{creatime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{updatime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hxzy.entity.SaleOrder">
    insert into lz_sale_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goodsId,
      </if>
      <if test="customerId != null">
        customerId,
      </if>
      <if test="customerName != null">
        customerName,
      </if>
      <if test="repoId != null">
        repoId,
      </if>
      <if test="orderNumber != null">
        orderNumber,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="unitPrice != null">
        unitPrice,
      </if>
      <if test="totalPrice != null">
        totalPrice,
      </if>
      <if test="employeeId != null">
        employeeId,
      </if>
      <if test="descs != null">
        descs,
      </if>
      <if test="checkState != null">
        checkState,
      </if>
      <if test="checkResult != null">
        checkResult,
      </if>
      <if test="checkAccount != null">
        checkAccount,
      </if>
      <if test="checktime != null">
        checktime,
      </if>
      <if test="taketime != null">
        taketime,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="creatime != null">
        creatime,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="updatime != null">
        updatime,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="repoId != null">
        #{repoId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="descs != null">
        #{descs,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=INTEGER},
      </if>
      <if test="checkResult != null">
        #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="checkAccount != null">
        #{checkAccount,jdbcType=VARCHAR},
      </if>
      <if test="checktime != null">
        #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="taketime != null">
        #{taketime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="creatime != null">
        #{creatime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updatime != null">
        #{updatime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxzy.entity.SaleOrder">
    update lz_sale_order
    <set>
      <if test="goodsId != null">
        goodsId = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customerId = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="customerName != null">
        customerName = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="repoId != null">
        repoId = #{repoId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        orderNumber = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unitPrice = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        totalPrice = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="employeeId != null">
        employeeId = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="descs != null">
        descs = #{descs,jdbcType=VARCHAR},
      </if>
      <if test="checkState != null">
        checkState = #{checkState,jdbcType=INTEGER},
      </if>
      <if test="checkResult != null">
        checkResult = #{checkResult,jdbcType=VARCHAR},
      </if>
      <if test="checkAccount != null">
        checkAccount = #{checkAccount,jdbcType=VARCHAR},
      </if>
      <if test="checktime != null">
        checktime = #{checktime,jdbcType=TIMESTAMP},
      </if>
      <if test="taketime != null">
        taketime = #{taketime,jdbcType=TIMESTAMP},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="creatime != null">
        creatime = #{creatime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updatime != null">
        updatime = #{updatime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxzy.entity.SaleOrder">
    update lz_sale_order
    set goodsId = #{goodsId,jdbcType=INTEGER},
      customerId = #{customerId,jdbcType=INTEGER},
      customerName = #{customerName,jdbcType=VARCHAR},
      repoId = #{repoId,jdbcType=INTEGER},
      orderNumber = #{orderNumber,jdbcType=VARCHAR},
      `count` = #{count,jdbcType=INTEGER},
      unitPrice = #{unitPrice,jdbcType=DECIMAL},
      totalPrice = #{totalPrice,jdbcType=DECIMAL},
      employeeId = #{employeeId,jdbcType=INTEGER},
      descs = #{descs,jdbcType=VARCHAR},
      checkState = #{checkState,jdbcType=INTEGER},
      checkResult = #{checkResult,jdbcType=VARCHAR},
      checkAccount = #{checkAccount,jdbcType=VARCHAR},
      checktime = #{checktime,jdbcType=TIMESTAMP},
      taketime = #{taketime,jdbcType=TIMESTAMP},
      creater = #{creater,jdbcType=VARCHAR},
      creatime = #{creatime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      updatime = #{updatime,jdbcType=TIMESTAMP},
      `state` = #{state,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="search" parameterType="com.hxzy.dto.SaleOrderSearchDTO" resultMap="BaseResultMap">
    SELECT lz_sale_order.id,lz_sale_order.goodsId,lz_sale_order.customerId,lz_sale_order.customerName,lz_sale_order.repoId,
    lz_sale_order.orderNumber,lz_sale_order.count,lz_sale_order.unitPrice,lz_sale_order.totalPrice,lz_sale_order.employeeId,lz_sale_order.descs,
    lz_sale_order.checkState,lz_sale_order.checkResult,lz_sale_order.checkAccount,lz_sale_order.checktime,
    lz_sale_order.taketime,lz_sale_order.creater,lz_sale_order.creatime,lz_sale_order.updater,lz_sale_order.updatime,
    lz_sale_order.state,lz_sale_order.type
    FROM
    lz_sale_order

    <where>
      <if test="type!=null and type!=''">
        and lz_sale_order.type=#{type,jdbcType=INTEGER}
      </if>
      <if test="orderNumber!=null and orderNumber!=''">
        and orderNumber=#{orderNumber,jdbcType=VARCHAR}
      </if>
      <if test="goodsName!=null and goodsName!=''">
        and goodsId in(select id from lz_base_goods where lz_base_goods.name like concat('%',#{goodsName,jdbcType=VARCHAR},'%'))
        or goodsId =(select id from lz_base_goods where lz_base_goods.code =#{goodsName,jdbcType=VARCHAR})
      </if>
      <if test="customerName!=null and customerName!=''">
        and customerName like concat('%',#{customerName,jdbcType=VARCHAR},'%')
      </if>

      <if test="repoId!=null and repoId!=''">
        and repoId=#{repoId,jdbcType=INTEGER}
      </if>
      <if test="employeeName!=null and employeeName!=''">
        and employeeId in(select id from lz_base_employee where lz_base_employee.name like concat('%',#{employeeName,jdbcType=VARCHAR},'%'))
        or employeeId =(select id from lz_base_employee where lz_base_employee.code =#{employeeName,jdbcType=VARCHAR})
      </if>

      <if test="checkState!=null and checkState!=''">
        and checkState=#{checkState,jdbcType=INTEGER}
      </if>
      <if test="beginTime!=null and endTime!=null">
        and taketime BETWEEN   #{beginTime,jdbcType=TIMESTAMP} and #{endTime,jdbcType=TIMESTAMP}
      </if>
    </where>

  </select>
</mapper>