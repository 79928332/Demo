<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxzy.mapper.BaseParamTypeMapper">
  <resultMap id="BaseResultMap" type="com.hxzy.entity.BaseParamType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="typeName" jdbcType="VARCHAR" property="typeName" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, typeName, `type` , `state`
  </sql>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lz_base_param_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from lz_base_param_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hxzy.entity.BaseParamType">
    insert into lz_base_param_type (id, typeName, `type` ,`state`
      )
    values (#{id,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},#{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hxzy.entity.BaseParamType">
    insert into lz_base_param_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeName != null">
        typeName,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="state != null">
        `state`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxzy.entity.BaseParamType">
    update lz_base_param_type
    <set>
      <if test="typeName != null">
        typeName = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxzy.entity.BaseParamType">
    update lz_base_param_type
    set typeName = #{typeName,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="typeList" resultMap="BaseResultMap">
    select id,lz_base_param_type.typeName,lz_base_param_type.type from lz_base_param_type
  </select>

  <select id="search" parameterType="com.hxzy.dto.BaseParamTypeDTO" resultMap="BaseResultMap">
    select id,lz_base_param_type.typeName,lz_base_param_type.type from lz_base_param_type
    <where>
      <if test="typeName!=null and typeName!=''">
        and typeName like concat('%',#{typeName,jdbcType=VARCHAR},'%')
      </if>
      <if test="type!=null and type!=''">
        and lz_base_param_type.type = (select 'type' from lz_base_type where 'type'=#{type,jdbcType=VARCHAR} )
      </if>
    </where>
  </select>
  <select id="existsValue" parameterType="com.hxzy.dto.BaseParamTypeDTO" resultType="int">
    select count(0) from lz_base_param_type
    <where>
      <if test="typeName!=null and typeName!=''">
        and typeName=#{typeName,jdbcType=VARCHAR}
      </if>
      <if test="type!=null and type!=''">
        and type=#{type,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>